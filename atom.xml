<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PacketMania</title>
  <icon>https://www.packetmania.net/en/icon.png</icon>
  <subtitle>Technology | Knowledge | Sharing</subtitle>
  <link href="https://www.packetmania.net/en/atom.xml" rel="self"/>
  
  <link href="https://www.packetmania.net/en/"/>
  <updated>2022-03-21T06:59:51.560Z</updated>
  <id>https://www.packetmania.net/en/</id>
  
  <author>
    <name>Zixi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IPv6 Dynamic Address Allocation Mechanism Illustrated</title>
    <link href="https://www.packetmania.net/en/2022/03/13/IPv6-Addressing/"/>
    <id>https://www.packetmania.net/en/2022/03/13/IPv6-Addressing/</id>
    <published>2022-03-14T05:14:48.000Z</published>
    <updated>2022-03-21T06:59:51.560Z</updated>
    
    
    <summary type="html">&lt;p&gt;IPv6 supports multiple addresses, making address assignments more flexible and convenient. Unlike IPv4, which relied solely on the DHCP protocol for address assignment, IPv6 incorporates a native &lt;a href=&quot;https://tools.ietf.org/html/rfc4862&quot;&gt;Stateless Address AutoConfiguration&lt;/a&gt; SLAAC) protocol. SLAAC can either work alone to provide IPv6 addresses to hosts, or it can work with &lt;a href=&quot;https://tools.ietf.org/html/rfc8415&quot;&gt;DHCPv6&lt;/a&gt; to generate new assignment schemes. Here is a comprehensive analysis of the dynamic address allocation mechanism for IPv6.</summary>
    
    
    
    <category term="Study Notes" scheme="https://www.packetmania.net/en/categories/Study-Notes/"/>
    
    
    <category term="TCP/IP" scheme="https://www.packetmania.net/en/tags/TCP-IP/"/>
    
    <category term="Cisco Technology" scheme="https://www.packetmania.net/en/tags/Cisco-Technology/"/>
    
  </entry>
  
  <entry>
    <title>Implement Textbook RSA in Python</title>
    <link href="https://www.packetmania.net/en/2022/01/22/Python-Textbook-RSA/"/>
    <id>https://www.packetmania.net/en/2022/01/22/Python-Textbook-RSA/</id>
    <published>2022-01-23T00:09:23.000Z</published>
    <updated>2022-02-21T00:54:17.568Z</updated>
    
    
    <summary type="html">&lt;p&gt;RSA encryption algorithm is one of the core technologies of modern public-key cryptography and is widely used on the Internet. As a classical algorithm of public-key cryptography, the programming implementation of textbook RSA can help us quickly grasp its mathematical mechanism and design ideas, and accumulate important experience in the software implementation of cryptography. Here is a detailed example of textbook RSA implementation in Python 3.8 programming environment.</summary>
    
    
    
    <category term="Technology Knowhow" scheme="https://www.packetmania.net/en/categories/Technology-Knowhow/"/>
    
    
    <category term="Python Programming" scheme="https://www.packetmania.net/en/tags/Python-Programming/"/>
    
    <category term="Cryptography" scheme="https://www.packetmania.net/en/tags/Cryptography/"/>
    
  </entry>
  
  <entry>
    <title>Build an Awesome Raspberry Pi NAS for Home Media Streaming</title>
    <link href="https://www.packetmania.net/en/2021/12/29/RPi-NAS-Plex/"/>
    <id>https://www.packetmania.net/en/2021/12/29/RPi-NAS-Plex/</id>
    <published>2021-12-29T18:53:08.000Z</published>
    <updated>2022-02-21T00:50:34.374Z</updated>
    
    
    <summary type="html">&lt;p&gt;Network Attached Storage (NAS) provides data access to a heterogeneous group of clients over computer networks. As hard drive prices continue to drop, NAS devices have made their way into the homes of the masses. Leading brands in the SMB and home NAS market, such as Synology, have their products range in price from as low as $300 to $700 for the high models. But if you are a Raspberry Pi player, you can build a very nice home NAS and streaming service for only about half the cost of the lowest price.</summary>
    
    
    
    <category term="DIY Projects" scheme="https://www.packetmania.net/en/categories/DIY-Projects/"/>
    
    
    <category term="Raspberry Pi" scheme="https://www.packetmania.net/en/tags/Raspberry-Pi/"/>
    
    <category term="NAS" scheme="https://www.packetmania.net/en/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>IPv4 and IPv6 Header Checksum Algorithm Explained</title>
    <link href="https://www.packetmania.net/en/2021/12/26/IPv4-IPv6-checksum/"/>
    <id>https://www.packetmania.net/en/2021/12/26/IPv4-IPv6-checksum/</id>
    <published>2021-12-27T04:52:03.000Z</published>
    <updated>2022-02-21T00:57:05.313Z</updated>
    
    
    <summary type="html">&lt;p&gt;About the IP packet header checksum algorithm, simply put, it is 16-bit ones&#39; complement of the ones&#39; complement sum of all 16-bit words in the header. However, not many sources show exactly how this is done.</summary>
    
    
    
    <category term="Study Notes" scheme="https://www.packetmania.net/en/categories/Study-Notes/"/>
    
    
    <category term="C/C++ Programming" scheme="https://www.packetmania.net/en/tags/C-C-Programming/"/>
    
    <category term="TCP/IP" scheme="https://www.packetmania.net/en/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>Understand Endianness</title>
    <link href="https://www.packetmania.net/en/2021/12/24/Endianness/"/>
    <id>https://www.packetmania.net/en/2021/12/24/Endianness/</id>
    <published>2021-12-25T05:58:43.000Z</published>
    <updated>2022-02-21T00:56:05.148Z</updated>
    
    
    <summary type="html">&lt;p&gt;The problem of Endianness is essentially a question about how computers store large numbers.</summary>
    
    
    
    <category term="Study Notes" scheme="https://www.packetmania.net/en/categories/Study-Notes/"/>
    
    
    <category term="Computer Architecture" scheme="https://www.packetmania.net/en/tags/Computer-Architecture/"/>
    
    <category term="Computer Communications" scheme="https://www.packetmania.net/en/tags/Computer-Communications/"/>
    
    <category term="System Programming" scheme="https://www.packetmania.net/en/tags/System-Programming/"/>
    
    <category term="C/C++ Programming" scheme="https://www.packetmania.net/en/tags/C-C-Programming/"/>
    
  </entry>
  
</feed>
